import { getFoldableComposition } from './Foldable';
import { getFunctorComposition } from './Functor';
export function traverse(F, 
// tslint:disable-next-line: deprecation
T) {
    return T.traverse(F);
}
// tslint:disable-next-line: deprecation
export function sequence(F, T) {
    return tfa => T.traverse(F)(tfa, fa => fa);
}
// tslint:disable-next-line: deprecation
export function getTraversableComposition(F, G) {
    return Object.assign({}, getFunctorComposition(F, G), getFoldableComposition(F, G), { traverse: H => {
            const traverseF = F.traverse(H);
            const traverseG = G.traverse(H);
            return (fga, f) => traverseF(fga, ga => traverseG(ga, f));
        } });
}
